{"version":3,"sources":["../.cache/.cargo-web/loader-d20feded5cd4b4e8741163e1095849df.js"],"names":["module","exports","bundle","__initialize","__wasm_module","__load_asynchronously","instance","Module","STDWEB_PRIVATE","to_utf8","str","addr","HEAPU8","i","length","u","charCodeAt","noop","to_js","address","kind","HEAP32","HEAPF64","pointer","HEAPU32","to_js_string","arena","output","push","value_array_pointer","key_array_pointer","key_pointer","key_length","key","value","acquire_js_reference","adapter_pointer","deallocator_pointer","num_ongoing_calls","drop_queued","ReferenceError","function_pointer","drop","args","alloc","serialize_array","arguments","dyncall","result","tmp","array_kind","pointer_end","subarray","HEAP8","HEAPU16","HEAP16","HEAPF32","get_raw_value","serialize_object","keys","Object","key_address","to_utf8_string","from_js","cachedEncoder","TextEncoder","util","buffer","encode","set","utf8_len","prototype","toString","call","undefined","id","register_raw_value","refid","acquire_rust_reference","cachedDecoder","TextDecoder","index","decode","end","x","String","fromCharCode","init","y","ch","z","y_z","w","id_to_ref_map","id_to_refcount_map","ref_to_id_map","WeakMap","ref_to_id_map_fallback","Map","last_refid","id_to_raw_value_map","last_raw_value_id","reference","get","e","increment_refcount","decrement_refcount","delete","unregister_raw_value","size","web_malloc","signature","ptr","web_table","apply","len","prepare_any_arg","arg","acquire_tmp","dummy","__web_on_grow","memory","Int8Array","Int16Array","Int32Array","Uint8Array","Uint16Array","Uint32Array","Float32Array","Float64Array","defineProperty","imports","env","$0","alert","$1","o","Array","array","object","initialize","__web_malloc","__web_free","__indirect_function_table","books_state","books_dispatch","state","action","store_state","store_dispatch","module_factory","WebAssembly","instantiate","then","wasm_instance","console","log","catch","error","Instance","fetch","response","arrayBuffer","bytes","compile","mod"],"mappings":"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","file":"Cargo.47a7e1aa.js","sourceRoot":"../public","sourcesContent":["\n            module.exports = function( bundle ) {\n                function __initialize( __wasm_module, __load_asynchronously ) {\n    return (function( module_factory ) {\n        var instance = module_factory();\n        if( __load_asynchronously ) {\n            return WebAssembly.instantiate( __wasm_module, instance.imports )\n                .then( function( wasm_instance ) {\n                    var exports = instance.initialize( wasm_instance );\n                    console.log( \"Finished loading Rust wasm module 'riot_rs_wasm'\" );\n                    return exports;\n                })\n                .catch( function( error ) {\n                    console.log( \"Error loading Rust wasm module 'riot_rs_wasm':\", error );\n                    throw error;\n                });\n        } else {\n            var instance = new WebAssembly.Instance( __wasm_module, instance.imports );\n            return instance.initialize( wasm_instance );\n        }\n    }( function() {\n    var Module = {};\n\n    Module.STDWEB_PRIVATE = {};\n\n// This is based on code from Emscripten's preamble.js.\nModule.STDWEB_PRIVATE.to_utf8 = function to_utf8( str, addr ) {\n    var HEAPU8 = Module.HEAPU8;\n    for( var i = 0; i < str.length; ++i ) {\n        // Gotcha: charCodeAt returns a 16-bit word that is a UTF-16 encoded code unit, not a Unicode code point of the character! So decode UTF16->UTF32->UTF8.\n        // See http://unicode.org/faq/utf_bom.html#utf16-3\n        // For UTF8 byte structure, see http://en.wikipedia.org/wiki/UTF-8#Description and https://www.ietf.org/rfc/rfc2279.txt and https://tools.ietf.org/html/rfc3629\n        var u = str.charCodeAt( i ); // possibly a lead surrogate\n        if( u >= 0xD800 && u <= 0xDFFF ) {\n            u = 0x10000 + ((u & 0x3FF) << 10) | (str.charCodeAt( ++i ) & 0x3FF);\n        }\n\n        if( u <= 0x7F ) {\n            HEAPU8[ addr++ ] = u;\n        } else if( u <= 0x7FF ) {\n            HEAPU8[ addr++ ] = 0xC0 | (u >> 6);\n            HEAPU8[ addr++ ] = 0x80 | (u & 63);\n        } else if( u <= 0xFFFF ) {\n            HEAPU8[ addr++ ] = 0xE0 | (u >> 12);\n            HEAPU8[ addr++ ] = 0x80 | ((u >> 6) & 63);\n            HEAPU8[ addr++ ] = 0x80 | (u & 63);\n        } else if( u <= 0x1FFFFF ) {\n            HEAPU8[ addr++ ] = 0xF0 | (u >> 18);\n            HEAPU8[ addr++ ] = 0x80 | ((u >> 12) & 63);\n            HEAPU8[ addr++ ] = 0x80 | ((u >> 6) & 63);\n            HEAPU8[ addr++ ] = 0x80 | (u & 63);\n        } else if( u <= 0x3FFFFFF ) {\n            HEAPU8[ addr++ ] = 0xF8 | (u >> 24);\n            HEAPU8[ addr++ ] = 0x80 | ((u >> 18) & 63);\n            HEAPU8[ addr++ ] = 0x80 | ((u >> 12) & 63);\n            HEAPU8[ addr++ ] = 0x80 | ((u >> 6) & 63);\n            HEAPU8[ addr++ ] = 0x80 | (u & 63);\n        } else {\n            HEAPU8[ addr++ ] = 0xFC | (u >> 30);\n            HEAPU8[ addr++ ] = 0x80 | ((u >> 24) & 63);\n            HEAPU8[ addr++ ] = 0x80 | ((u >> 18) & 63);\n            HEAPU8[ addr++ ] = 0x80 | ((u >> 12) & 63);\n            HEAPU8[ addr++ ] = 0x80 | ((u >> 6) & 63);\n            HEAPU8[ addr++ ] = 0x80 | (u & 63);\n        }\n    }\n};\n\nModule.STDWEB_PRIVATE.noop = function() {};\nModule.STDWEB_PRIVATE.to_js = function to_js( address ) {\n    var kind = Module.HEAPU8[ address + 12 ];\n    if( kind === 0 ) {\n        return undefined;\n    } else if( kind === 1 ) {\n        return null;\n    } else if( kind === 2 ) {\n        return Module.HEAP32[ address / 4 ];\n    } else if( kind === 3 ) {\n        return Module.HEAPF64[ address / 8 ];\n    } else if( kind === 4 ) {\n        var pointer = Module.HEAPU32[ address / 4 ];\n        var length = Module.HEAPU32[ (address + 4) / 4 ];\n        return Module.STDWEB_PRIVATE.to_js_string( pointer, length );\n    } else if( kind === 5 ) {\n        return false;\n    } else if( kind === 6 ) {\n        return true;\n    } else if( kind === 7 ) {\n        var pointer = Module.STDWEB_PRIVATE.arena + Module.HEAPU32[ address / 4 ];\n        var length = Module.HEAPU32[ (address + 4) / 4 ];\n        var output = [];\n        for( var i = 0; i < length; ++i ) {\n            output.push( Module.STDWEB_PRIVATE.to_js( pointer + i * 16 ) );\n        }\n        return output;\n    } else if( kind === 8 ) {\n        var arena = Module.STDWEB_PRIVATE.arena;\n        var value_array_pointer = arena + Module.HEAPU32[ address / 4 ];\n        var length = Module.HEAPU32[ (address + 4) / 4 ];\n        var key_array_pointer = arena + Module.HEAPU32[ (address + 8) / 4 ];\n        var output = {};\n        for( var i = 0; i < length; ++i ) {\n            var key_pointer = Module.HEAPU32[ (key_array_pointer + i * 8) / 4 ];\n            var key_length = Module.HEAPU32[ (key_array_pointer + 4 + i * 8) / 4 ];\n            var key = Module.STDWEB_PRIVATE.to_js_string( key_pointer, key_length );\n            var value = Module.STDWEB_PRIVATE.to_js( value_array_pointer + i * 16 );\n            output[ key ] = value;\n        }\n        return output;\n    } else if( kind === 9 ) {\n        return Module.STDWEB_PRIVATE.acquire_js_reference( Module.HEAP32[ address / 4 ] );\n    } else if( kind === 10 || kind === 12 || kind === 13 ) {\n        var adapter_pointer = Module.HEAPU32[ address / 4 ];\n        var pointer = Module.HEAPU32[ (address + 4) / 4 ];\n        var deallocator_pointer = Module.HEAPU32[ (address + 8) / 4 ];\n        var num_ongoing_calls = 0;\n        var drop_queued = false;\n        var output = function() {\n            if( pointer === 0 || drop_queued === true ) {\n                if (kind === 10) {\n                    throw new ReferenceError( \"Already dropped Rust function called!\" );\n                } else if (kind === 12) {\n                    throw new ReferenceError( \"Already dropped FnMut function called!\" );\n                } else {\n                    throw new ReferenceError( \"Already called or dropped FnOnce function called!\" );\n                }\n            }\n\n            var function_pointer = pointer;\n            if (kind === 13) {\n                output.drop = Module.STDWEB_PRIVATE.noop;\n                pointer = 0;\n            }\n\n            if (num_ongoing_calls !== 0) {\n                if (kind === 12 || kind === 13) {\n                    throw new ReferenceError( \"FnMut function called multiple times concurrently!\" );\n                }\n            }\n\n            var args = Module.STDWEB_PRIVATE.alloc( 16 );\n            Module.STDWEB_PRIVATE.serialize_array( args, arguments );\n\n            try {\n                num_ongoing_calls += 1;\n                Module.STDWEB_PRIVATE.dyncall( \"vii\", adapter_pointer, [function_pointer, args] );\n                var result = Module.STDWEB_PRIVATE.tmp;\n                Module.STDWEB_PRIVATE.tmp = null;\n            } finally {\n                num_ongoing_calls -= 1;\n            }\n\n            if( drop_queued === true && num_ongoing_calls === 0 ) {\n                output.drop();\n            }\n\n            return result;\n        };\n\n        output.drop = function() {\n            if (num_ongoing_calls !== 0) {\n                drop_queued = true;\n                return;\n            }\n\n            output.drop = Module.STDWEB_PRIVATE.noop;\n            var function_pointer = pointer;\n            pointer = 0;\n\n            if (function_pointer != 0) {\n                Module.STDWEB_PRIVATE.dyncall( \"vi\", deallocator_pointer, [function_pointer] );\n            }\n        };\n\n        return output;\n    } else if( kind === 14 ) {\n        var pointer = Module.HEAPU32[ address / 4 ];\n        var length = Module.HEAPU32[ (address + 4) / 4 ];\n        var array_kind = Module.HEAPU32[ (address + 8) / 4 ];\n        var pointer_end = pointer + length;\n\n        switch( array_kind ) {\n            case 0:\n                return Module.HEAPU8.subarray( pointer, pointer_end );\n            case 1:\n                return Module.HEAP8.subarray( pointer, pointer_end );\n            case 2:\n                return Module.HEAPU16.subarray( pointer, pointer_end );\n            case 3:\n                return Module.HEAP16.subarray( pointer, pointer_end );\n            case 4:\n                return Module.HEAPU32.subarray( pointer, pointer_end );\n            case 5:\n                return Module.HEAP32.subarray( pointer, pointer_end );\n            case 6:\n                return Module.HEAPF32.subarray( pointer, pointer_end );\n            case 7:\n                return Module.HEAPF64.subarray( pointer, pointer_end );\n        }\n    } else if( kind === 15 ) {\n        return Module.STDWEB_PRIVATE.get_raw_value( Module.HEAPU32[ address / 4 ] );\n    }\n};\n\nModule.STDWEB_PRIVATE.serialize_object = function serialize_object( address, value ) {\n    var keys = Object.keys( value );\n    var length = keys.length;\n    var key_array_pointer = Module.STDWEB_PRIVATE.alloc( length * 8 );\n    var value_array_pointer = Module.STDWEB_PRIVATE.alloc( length * 16 );\n    Module.HEAPU8[ address + 12 ] = 8;\n    Module.HEAPU32[ address / 4 ] = value_array_pointer;\n    Module.HEAPU32[ (address + 4) / 4 ] = length;\n    Module.HEAPU32[ (address + 8) / 4 ] = key_array_pointer;\n    for( var i = 0; i < length; ++i ) {\n        var key = keys[ i ];\n        var key_address = key_array_pointer + i * 8;\n        Module.STDWEB_PRIVATE.to_utf8_string( key_address, key );\n\n        Module.STDWEB_PRIVATE.from_js( value_array_pointer + i * 16, value[ key ] );\n    }\n};\n\nModule.STDWEB_PRIVATE.serialize_array = function serialize_array( address, value ) {\n    var length = value.length;\n    var pointer = Module.STDWEB_PRIVATE.alloc( length * 16 );\n    Module.HEAPU8[ address + 12 ] = 7;\n    Module.HEAPU32[ address / 4 ] = pointer;\n    Module.HEAPU32[ (address + 4) / 4 ] = length;\n    for( var i = 0; i < length; ++i ) {\n        Module.STDWEB_PRIVATE.from_js( pointer + i * 16, value[ i ] );\n    }\n};\n\n// New browsers and recent Node\nvar cachedEncoder = ( typeof TextEncoder === \"function\"\n    ? new TextEncoder( \"utf-8\" )\n    // Old Node (before v11)\n    : ( typeof util === \"object\" && util && typeof util.TextEncoder === \"function\"\n        ? new util.TextEncoder( \"utf-8\" )\n        // Old browsers\n        : null ) );\n\nif ( cachedEncoder != null ) {\n    Module.STDWEB_PRIVATE.to_utf8_string = function to_utf8_string( address, value ) {\n        var buffer = cachedEncoder.encode( value );\n        var length = buffer.length;\n        var pointer = 0;\n\n        if ( length > 0 ) {\n            pointer = Module.STDWEB_PRIVATE.alloc( length );\n            Module.HEAPU8.set( buffer, pointer );\n        }\n\n        Module.HEAPU32[ address / 4 ] = pointer;\n        Module.HEAPU32[ (address + 4) / 4 ] = length;\n    };\n\n} else {\n    Module.STDWEB_PRIVATE.to_utf8_string = function to_utf8_string( address, value ) {\n        var length = Module.STDWEB_PRIVATE.utf8_len( value );\n        var pointer = 0;\n\n        if ( length > 0 ) {\n            pointer = Module.STDWEB_PRIVATE.alloc( length );\n            Module.STDWEB_PRIVATE.to_utf8( value, pointer );\n        }\n\n        Module.HEAPU32[ address / 4 ] = pointer;\n        Module.HEAPU32[ (address + 4) / 4 ] = length;\n    };\n}\n\nModule.STDWEB_PRIVATE.from_js = function from_js( address, value ) {\n    var kind = Object.prototype.toString.call( value );\n    if( kind === \"[object String]\" ) {\n        Module.HEAPU8[ address + 12 ] = 4;\n        Module.STDWEB_PRIVATE.to_utf8_string( address, value );\n    } else if( kind === \"[object Number]\" ) {\n        if( value === (value|0) ) {\n            Module.HEAPU8[ address + 12 ] = 2;\n            Module.HEAP32[ address / 4 ] = value;\n        } else {\n            Module.HEAPU8[ address + 12 ] = 3;\n            Module.HEAPF64[ address / 8 ] = value;\n        }\n    } else if( value === null ) {\n        Module.HEAPU8[ address + 12 ] = 1;\n    } else if( value === undefined ) {\n        Module.HEAPU8[ address + 12 ] = 0;\n    } else if( value === false ) {\n        Module.HEAPU8[ address + 12 ] = 5;\n    } else if( value === true ) {\n        Module.HEAPU8[ address + 12 ] = 6;\n    } else if( kind === \"[object Symbol]\" ) {\n        var id = Module.STDWEB_PRIVATE.register_raw_value( value );\n        Module.HEAPU8[ address + 12 ] = 15;\n        Module.HEAP32[ address / 4 ] = id;\n    } else {\n        var refid = Module.STDWEB_PRIVATE.acquire_rust_reference( value );\n        Module.HEAPU8[ address + 12 ] = 9;\n        Module.HEAP32[ address / 4 ] = refid;\n    }\n};\n\n// New browsers and recent Node\nvar cachedDecoder = ( typeof TextDecoder === \"function\"\n    ? new TextDecoder( \"utf-8\" )\n    // Old Node (before v11)\n    : ( typeof util === \"object\" && util && typeof util.TextDecoder === \"function\"\n        ? new util.TextDecoder( \"utf-8\" )\n        // Old browsers\n        : null ) );\n\nif ( cachedDecoder != null ) {\n    Module.STDWEB_PRIVATE.to_js_string = function to_js_string( index, length ) {\n        return cachedDecoder.decode( Module.HEAPU8.subarray( index, index + length ) );\n    };\n\n} else {\n    // This is ported from Rust's stdlib; it's faster than\n    // the string conversion from Emscripten.\n    Module.STDWEB_PRIVATE.to_js_string = function to_js_string( index, length ) {\n        var HEAPU8 = Module.HEAPU8;\n        index = index|0;\n        length = length|0;\n        var end = (index|0) + (length|0);\n        var output = \"\";\n        while( index < end ) {\n            var x = HEAPU8[ index++ ];\n            if( x < 128 ) {\n                output += String.fromCharCode( x );\n                continue;\n            }\n            var init = (x & (0x7F >> 2));\n            var y = 0;\n            if( index < end ) {\n                y = HEAPU8[ index++ ];\n            }\n            var ch = (init << 6) | (y & 63);\n            if( x >= 0xE0 ) {\n                var z = 0;\n                if( index < end ) {\n                    z = HEAPU8[ index++ ];\n                }\n                var y_z = ((y & 63) << 6) | (z & 63);\n                ch = init << 12 | y_z;\n                if( x >= 0xF0 ) {\n                    var w = 0;\n                    if( index < end ) {\n                        w = HEAPU8[ index++ ];\n                    }\n                    ch = (init & 7) << 18 | ((y_z << 6) | (w & 63));\n\n                    output += String.fromCharCode( 0xD7C0 + (ch >> 10) );\n                    ch = 0xDC00 + (ch & 0x3FF);\n                }\n            }\n            output += String.fromCharCode( ch );\n            continue;\n        }\n        return output;\n    };\n}\n\nModule.STDWEB_PRIVATE.id_to_ref_map = {};\nModule.STDWEB_PRIVATE.id_to_refcount_map = {};\nModule.STDWEB_PRIVATE.ref_to_id_map = new WeakMap();\n// Not all types can be stored in a WeakMap\nModule.STDWEB_PRIVATE.ref_to_id_map_fallback = new Map();\nModule.STDWEB_PRIVATE.last_refid = 1;\n\nModule.STDWEB_PRIVATE.id_to_raw_value_map = {};\nModule.STDWEB_PRIVATE.last_raw_value_id = 1;\n\nModule.STDWEB_PRIVATE.acquire_rust_reference = function( reference ) {\n    if( reference === undefined || reference === null ) {\n        return 0;\n    }\n\n    var id_to_refcount_map = Module.STDWEB_PRIVATE.id_to_refcount_map;\n    var id_to_ref_map = Module.STDWEB_PRIVATE.id_to_ref_map;\n    var ref_to_id_map = Module.STDWEB_PRIVATE.ref_to_id_map;\n    var ref_to_id_map_fallback = Module.STDWEB_PRIVATE.ref_to_id_map_fallback;\n\n    var refid = ref_to_id_map.get( reference );\n    if( refid === undefined ) {\n        refid = ref_to_id_map_fallback.get( reference );\n    }\n    if( refid === undefined ) {\n        refid = Module.STDWEB_PRIVATE.last_refid++;\n        try {\n            ref_to_id_map.set( reference, refid );\n        } catch (e) {\n            ref_to_id_map_fallback.set( reference, refid );\n        }\n    }\n\n    if( refid in id_to_ref_map ) {\n        id_to_refcount_map[ refid ]++;\n    } else {\n        id_to_ref_map[ refid ] = reference;\n        id_to_refcount_map[ refid ] = 1;\n    }\n\n    return refid;\n};\n\nModule.STDWEB_PRIVATE.acquire_js_reference = function( refid ) {\n    return Module.STDWEB_PRIVATE.id_to_ref_map[ refid ];\n};\n\nModule.STDWEB_PRIVATE.increment_refcount = function( refid ) {\n    Module.STDWEB_PRIVATE.id_to_refcount_map[ refid ]++;\n};\n\nModule.STDWEB_PRIVATE.decrement_refcount = function( refid ) {\n    var id_to_refcount_map = Module.STDWEB_PRIVATE.id_to_refcount_map;\n    if( 0 == --id_to_refcount_map[ refid ] ) {\n        var id_to_ref_map = Module.STDWEB_PRIVATE.id_to_ref_map;\n        var ref_to_id_map_fallback = Module.STDWEB_PRIVATE.ref_to_id_map_fallback;\n        var reference = id_to_ref_map[ refid ];\n        delete id_to_ref_map[ refid ];\n        delete id_to_refcount_map[ refid ];\n        ref_to_id_map_fallback.delete(reference);\n    }\n};\n\nModule.STDWEB_PRIVATE.register_raw_value = function( value ) {\n    var id = Module.STDWEB_PRIVATE.last_raw_value_id++;\n    Module.STDWEB_PRIVATE.id_to_raw_value_map[ id ] = value;\n    return id;\n};\n\nModule.STDWEB_PRIVATE.unregister_raw_value = function( id ) {\n    delete Module.STDWEB_PRIVATE.id_to_raw_value_map[ id ];\n};\n\nModule.STDWEB_PRIVATE.get_raw_value = function( id ) {\n    return Module.STDWEB_PRIVATE.id_to_raw_value_map[ id ];\n};\n\nModule.STDWEB_PRIVATE.alloc = function alloc( size ) {\n    return Module.web_malloc( size );\n};\n\nModule.STDWEB_PRIVATE.dyncall = function( signature, ptr, args ) {\n    return Module.web_table.get( ptr ).apply( null, args );\n};\n\n// This is based on code from Emscripten's preamble.js.\nModule.STDWEB_PRIVATE.utf8_len = function utf8_len( str ) {\n    var len = 0;\n    for( var i = 0; i < str.length; ++i ) {\n        // Gotcha: charCodeAt returns a 16-bit word that is a UTF-16 encoded code unit, not a Unicode code point of the character! So decode UTF16->UTF32->UTF8.\n        // See http://unicode.org/faq/utf_bom.html#utf16-3\n        var u = str.charCodeAt( i ); // possibly a lead surrogate\n        if( u >= 0xD800 && u <= 0xDFFF ) {\n            u = 0x10000 + ((u & 0x3FF) << 10) | (str.charCodeAt( ++i ) & 0x3FF);\n        }\n\n        if( u <= 0x7F ) {\n            ++len;\n        } else if( u <= 0x7FF ) {\n            len += 2;\n        } else if( u <= 0xFFFF ) {\n            len += 3;\n        } else if( u <= 0x1FFFFF ) {\n            len += 4;\n        } else if( u <= 0x3FFFFFF ) {\n            len += 5;\n        } else {\n            len += 6;\n        }\n    }\n    return len;\n};\n\nModule.STDWEB_PRIVATE.prepare_any_arg = function( value ) {\n    var arg = Module.STDWEB_PRIVATE.alloc( 16 );\n    Module.STDWEB_PRIVATE.from_js( arg, value );\n    return arg;\n};\n\nModule.STDWEB_PRIVATE.acquire_tmp = function( dummy ) {\n    var value = Module.STDWEB_PRIVATE.tmp;\n    Module.STDWEB_PRIVATE.tmp = null;\n    return value;\n};\n\n\n\n    var HEAP8 = null;\n    var HEAP16 = null;\n    var HEAP32 = null;\n    var HEAPU8 = null;\n    var HEAPU16 = null;\n    var HEAPU32 = null;\n    var HEAPF32 = null;\n    var HEAPF64 = null;\n\n    Object.defineProperty( Module, 'exports', { value: {} } );\n\n    function __web_on_grow() {\n        var buffer = Module.instance.exports.memory.buffer;\n        HEAP8 = new Int8Array( buffer );\n        HEAP16 = new Int16Array( buffer );\n        HEAP32 = new Int32Array( buffer );\n        HEAPU8 = new Uint8Array( buffer );\n        HEAPU16 = new Uint16Array( buffer );\n        HEAPU32 = new Uint32Array( buffer );\n        HEAPF32 = new Float32Array( buffer );\n        HEAPF64 = new Float64Array( buffer );\n        Module.HEAP8 = HEAP8;\n        Module.HEAP16 = HEAP16;\n        Module.HEAP32 = HEAP32;\n        Module.HEAPU8 = HEAPU8;\n        Module.HEAPU16 = HEAPU16;\n        Module.HEAPU32 = HEAPU32;\n        Module.HEAPF32 = HEAPF32;\n        Module.HEAPF64 = HEAPF64;\n    }\n\n    return {\n        imports: {\n            env: {\n                \"__cargo_web_snippet_14097f70c739ef4a180a6ad82cadc458d11e85dc\": function($0) {\n                $0 = Module.STDWEB_PRIVATE.to_js($0);alert(($0));\n            },\n            \"__cargo_web_snippet_285aac3fba72d67cb459d37d4d21aa4fb62598ba\": function($0) {\n                Module.STDWEB_PRIVATE.arena = $0;\n            },\n            \"__cargo_web_snippet_4d66721dd755374fa177d86d1c818bf74cc0be84\": function($0, $1) {\n                $1 = Module.STDWEB_PRIVATE.to_js($1);Module.STDWEB_PRIVATE.from_js($0, (function(){return($1);})());\n            },\n            \"__cargo_web_snippet_515598dacc2aae3ba84e7207f3f75bd28fcbbd15\": function($0) {\n                var o = Module.STDWEB_PRIVATE.acquire_js_reference( $0 );return (o instanceof Object);\n            },\n            \"__cargo_web_snippet_5c3091ae7fa9c42123eec37f64de99a5808e7ef2\": function($0) {\n                var o = Module.STDWEB_PRIVATE.acquire_js_reference( $0 );return (o instanceof Array);\n            },\n            \"__cargo_web_snippet_80d6d56760c65e49b7be8b6b01c1ea861b046bf0\": function($0) {\n                Module.STDWEB_PRIVATE.decrement_refcount( $0 );\n            },\n            \"__cargo_web_snippet_8c32019649bb581b1b742eeedfc410e2bedd56a6\": function($0, $1) {\n                var array = Module.STDWEB_PRIVATE.acquire_js_reference( $0 );Module.STDWEB_PRIVATE.serialize_array( $1, array );\n            },\n            \"__cargo_web_snippet_e9638d6405ab65f78daf4a5af9c9de14ecf1e2ec\": function($0) {\n                $0 = Module.STDWEB_PRIVATE.to_js($0);Module.STDWEB_PRIVATE.unregister_raw_value(($0));\n            },\n            \"__cargo_web_snippet_f814fda503cb20016f78481f85431d48a7c4e731\": function($0, $1) {\n                var object = Module.STDWEB_PRIVATE.acquire_js_reference( $0 );Module.STDWEB_PRIVATE.serialize_object( $1, object );\n            },\n            \"__cargo_web_snippet_ff5103e6cc179d13b4c7a785bdce2708fd559fc0\": function($0) {\n                Module.STDWEB_PRIVATE.tmp = Module.STDWEB_PRIVATE.to_js( $0 );\n            },\n                \"__web_on_grow\": __web_on_grow\n            }\n        },\n        initialize: function( instance ) {\n            Object.defineProperty( Module, 'instance', { value: instance } );\n            Object.defineProperty( Module, 'web_malloc', { value: Module.instance.exports.__web_malloc } );\n            Object.defineProperty( Module, 'web_free', { value: Module.instance.exports.__web_free } );\n            Object.defineProperty( Module, 'web_table', { value: Module.instance.exports.__indirect_function_table } );\n\n            Module.exports.call = function call() {\n    Module.instance.exports.call();\n}\n;\n                Module.exports.books_state = function books_state() {\n    return Module.STDWEB_PRIVATE.acquire_tmp(Module.instance.exports.books_state());\n}\n;\n                Module.exports.books_dispatch = function books_dispatch(state, action) {\n    return Module.STDWEB_PRIVATE.acquire_tmp(Module.instance.exports.books_dispatch(Module.STDWEB_PRIVATE.prepare_any_arg(state), Module.STDWEB_PRIVATE.prepare_any_arg(action)));\n}\n;\n                Module.exports.store_state = function store_state() {\n    return Module.STDWEB_PRIVATE.acquire_tmp(Module.instance.exports.store_state());\n}\n;\n                Module.exports.store_dispatch = function store_dispatch(state, action) {\n    return Module.STDWEB_PRIVATE.acquire_tmp(Module.instance.exports.store_dispatch(Module.STDWEB_PRIVATE.prepare_any_arg(state), Module.STDWEB_PRIVATE.prepare_any_arg(action)));\n}\n;\n            __web_on_grow();\n            \n\n            return Module.exports;\n        }\n    };\n}\n ));\n}\n\n                return fetch( bundle )\n                    .then( response => response.arrayBuffer() )\n                    .then( bytes => WebAssembly.compile( bytes ) )\n                    .then( mod => __initialize( mod, true ) );\n            };\n        "]}