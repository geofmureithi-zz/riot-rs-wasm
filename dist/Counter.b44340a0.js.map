{"version":3,"sources":["../web/Counter.riot"],"names":["state","lib","counter_state","dispatch","counter_dispatch","console","log","increment","update","arguments","decrement","double","onMounted","template","expressionTypes","bindingTypes","getComponent","TEXT","scope","counter","EVENT"],"mappings":";AAKe,aAAA,OAAA,eAAA,QAAA,aAAA,CAAA,OAAA,IAAA,QAAA,aAAA,EALf,IAAA,EAAA,EAAA,QAAA,kBAKe,SAAA,EAAA,GAAA,OAAA,GAAA,EAAA,WAAA,EAAA,CAAA,QAAA,GAJf,IAAMA,EAAQC,EAAIC,QAAAA,cACZC,EAAWF,EAAIG,QAAAA,iBACrBC,QAAQC,IAAIL,EAAZ,SAEe,IAAA,EAAA,CACN,IAAA,KAEI,QAAA,CACTM,UAAW,WAAQC,KAAAA,OAAOL,EAAS,KAAKH,MAAOS,UAAU,GAAG,CAAgBA,UAAAA,UAAU,IAAM,eAC5FC,UAAW,WAAQF,KAAAA,OAAOL,EAAS,KAAKH,MAAOS,UAAU,GAAG,CAAgBA,UAAAA,UAAU,IAAM,eAC5FE,OAAQ,WAAQH,KAAAA,OAAOL,EAAS,KAAKH,MAAOS,UAAU,GAAG,CAAaA,OAAAA,UAAU,IAAM,YAEtFG,UAAW,WACFJ,KAAAA,OAAOR,OAIN,SAAA,SAASa,EAAUC,EAAiBC,EAAcC,GACrDH,OAAAA,EACL,uJACA,CAAC,CACuB,mBAAA,SACV,SAAA,WAEG,YAAA,CAAC,CACNC,KAAAA,EAAgBG,KACN,eAAA,EAEN,SAAA,SAASC,GACZA,OAAAA,EAAMlB,MAAMmB,YAGtB,CACqB,mBAAA,SACV,SAAA,WAEG,YAAA,CAAC,CACNL,KAAAA,EAAgBM,MAChB,KAAA,UAEI,SAAA,SAASF,GACZ,OAAA,WAAMA,OAAAA,EAAMX,UAAU,QAGhC,CACqB,mBAAA,SACV,SAAA,WAEG,YAAA,CAAC,CACNO,KAAAA,EAAgBM,MAChB,KAAA,UAEI,SAAA,SAASF,GACZ,OAAA,WAAMA,OAAAA,EAAMR,UAAU,QAGhC,CACqB,mBAAA,SACV,SAAA,WAEG,YAAA,CAAC,CACNI,KAAAA,EAAgBM,MAChB,KAAA,UAEI,SAAA,SAASF,GACZ,OAAA,WAAMA,OAAAA,EAAMP,iBAOrB,KAAA,OApEK,QAAA,QAAA","file":"Counter.b44340a0.js","sourceRoot":"../public","sourcesContent":["import lib from '../Cargo.toml'\nconst state = lib.counter_state\nconst dispatch = lib.counter_dispatch\nconsole.log(lib)\n\nexport default {\n  'css': null,\n\n  'exports': {\n    increment(){  this.update(dispatch(this.state, arguments[0]?{ \"increment\" : arguments[0] }: \"increment\"))},\n    decrement(){  this.update(dispatch(this.state, arguments[0]?{ \"decrement\" : arguments[0] }: \"decrement\"))},\n    double(){  this.update(dispatch(this.state, arguments[0]?{ \"double\" : arguments[0] }: \"double\"))},\n\n    onMounted(){\n        this.update(state())\n    }\n  },\n\n  'template': function(template, expressionTypes, bindingTypes, getComponent) {\n    return template(\n      '<p expr16=\"expr16\"> </p><button expr17=\"expr17\">Add +</button><button expr18=\"expr18\">Subtract -</button><button expr19=\"expr19\">Double * 2</button>',\n      [{\n        'redundantAttribute': 'expr16',\n        'selector': '[expr16]',\n\n        'expressions': [{\n          'type': expressionTypes.TEXT,\n          'childNodeIndex': 0,\n\n          'evaluate': function(scope) {\n            return scope.state.counter;\n          }\n        }]\n      }, {\n        'redundantAttribute': 'expr17',\n        'selector': '[expr17]',\n\n        'expressions': [{\n          'type': expressionTypes.EVENT,\n          'name': 'onclick',\n\n          'evaluate': function(scope) {\n            return () => scope.increment(1);\n          }\n        }]\n      }, {\n        'redundantAttribute': 'expr18',\n        'selector': '[expr18]',\n\n        'expressions': [{\n          'type': expressionTypes.EVENT,\n          'name': 'onclick',\n\n          'evaluate': function(scope) {\n            return () => scope.decrement(1);\n          }\n        }]\n      }, {\n        'redundantAttribute': 'expr19',\n        'selector': '[expr19]',\n\n        'expressions': [{\n          'type': expressionTypes.EVENT,\n          'name': 'onclick',\n\n          'evaluate': function(scope) {\n            return () => scope.double();\n          }\n        }]\n      }]\n    );\n  },\n\n  'name': 'app'\n};"]}