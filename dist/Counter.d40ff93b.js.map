{"version":3,"sources":["../web/Counter.riot"],"names":["state","lib","counter_state","dispatch","counter_dispatch","increment","update","arguments","decrement","double","onMounted","template","expressionTypes","bindingTypes","getComponent","TEXT","scope","counter","join","EVENT"],"mappings":";AAIe,aAAA,OAAA,eAAA,QAAA,aAAA,CAAA,OAAA,IAAA,QAAA,aAAA,EAJf,IAAA,EAAA,EAAA,QAAA,kBAIe,SAAA,EAAA,GAAA,OAAA,GAAA,EAAA,WAAA,EAAA,CAAA,QAAA,GAHf,IAAMA,EAAQC,EAAIC,QAAAA,cACZC,EAAWF,EAAIG,QAAAA,iBAEN,EAAA,CACN,IAAA,KAEI,QAAA,CACTC,UAAW,WAAQC,KAAAA,OAAOH,EAAS,KAAKH,MAAOO,UAAU,GAAG,CAAgBA,UAAAA,UAAU,IAAM,eAC5FC,UAAW,WAAQF,KAAAA,OAAOH,EAAS,KAAKH,MAAOO,UAAU,GAAG,CAAgBA,UAAAA,UAAU,IAAM,eAC5FE,OAAQ,WAAQH,KAAAA,OAAOH,EAAS,KAAKH,MAAOO,UAAU,GAAG,CAAaA,OAAAA,UAAU,IAAM,YAEtFG,UAAW,WACFJ,KAAAA,OAAON,OAIN,SAAA,SAASW,EAAUC,EAAiBC,EAAcC,GACrDH,OAAAA,EACL,+wBACA,CAAC,CACuB,mBAAA,QACV,SAAA,UAEG,YAAA,CAAC,CACNC,KAAAA,EAAgBG,KACN,eAAA,EAEN,SAAA,SAASC,GACZ,MAAA,CAAC,sBAAuBA,EAAMhB,MAAMiB,SAASC,KAAK,QAG5D,CACqB,mBAAA,SACV,SAAA,WAEG,YAAA,CAAC,CACNN,KAAAA,EAAgBO,MAChB,KAAA,UAEI,SAAA,SAASH,GACZ,OAAA,WAAMA,OAAAA,EAAMX,UAAU,QAGhC,CACqB,mBAAA,SACV,SAAA,WAEG,YAAA,CAAC,CACNO,KAAAA,EAAgBO,MAChB,KAAA,UAEI,SAAA,SAASH,GACZ,OAAA,WAAMA,OAAAA,EAAMR,UAAU,QAGhC,CACqB,mBAAA,SACV,SAAA,WAEG,YAAA,CAAC,CACNI,KAAAA,EAAgBO,MAChB,KAAA,UAEI,SAAA,SAASH,GACZ,OAAA,WAAMA,OAAAA,EAAMP,iBAOrB,KAAA,OApEK,QAAA,QAAA","file":"Counter.d40ff93b.js","sourceRoot":"../public","sourcesContent":["import lib from '../Cargo.toml'\nconst state = lib.counter_state\nconst dispatch = lib.counter_dispatch\n\nexport default {\n  'css': null,\n\n  'exports': {\n    increment(){  this.update(dispatch(this.state, arguments[0]?{ \"increment\" : arguments[0] }: \"increment\"))},\n    decrement(){  this.update(dispatch(this.state, arguments[0]?{ \"decrement\" : arguments[0] }: \"decrement\"))},\n    double(){  this.update(dispatch(this.state, arguments[0]?{ \"double\" : arguments[0] }: \"double\"))},\n\n    onMounted(){\n        this.update(state())\n    }\n  },\n\n  'template': function(template, expressionTypes, bindingTypes, getComponent) {\n    return template(\n      '<div class=\"flex bg-gray-100 py-24 justify-center\"><div class=\"p-12 text-center max-w-2xl\"><div expr9=\"expr9\" class=\"md:text-3xl text-3xl font-bold\"> </div><div class=\"text-xl font-normal mt-4\">Play around with\\n        </div><div class=\"mt-6 flex justify-center h-12 relative\"><button expr10=\"expr10\" class=\" shadow-md mx-2 font-medium py-2 px-4 text-green-100\\n        cursor-pointer bg-green-600 rounded text-lg tr-mt\">Add +</button><button expr11=\"expr11\" class=\" shadow-md font-medium mx-2 py-2 px-4 text-red-100\\n        cursor-pointer bg-green-600 rounded text-lg tr-mt \">Subtract -</button><button expr12=\"expr12\" class=\" shadow-md font-medium mx-2 py-2 px-4 text-yellow-100\\n        cursor-pointer bg-green-600 rounded text-lg tr-mt\">Double * 2</button></div></div></div>',\n      [{\n        'redundantAttribute': 'expr9',\n        'selector': '[expr9]',\n\n        'expressions': [{\n          'type': expressionTypes.TEXT,\n          'childNodeIndex': 0,\n\n          'evaluate': function(scope) {\n            return ['Your Counter is at ', scope.state.counter].join('');\n          }\n        }]\n      }, {\n        'redundantAttribute': 'expr10',\n        'selector': '[expr10]',\n\n        'expressions': [{\n          'type': expressionTypes.EVENT,\n          'name': 'onclick',\n\n          'evaluate': function(scope) {\n            return () => scope.increment(1);\n          }\n        }]\n      }, {\n        'redundantAttribute': 'expr11',\n        'selector': '[expr11]',\n\n        'expressions': [{\n          'type': expressionTypes.EVENT,\n          'name': 'onclick',\n\n          'evaluate': function(scope) {\n            return () => scope.decrement(1);\n          }\n        }]\n      }, {\n        'redundantAttribute': 'expr12',\n        'selector': '[expr12]',\n\n        'expressions': [{\n          'type': expressionTypes.EVENT,\n          'name': 'onclick',\n\n          'evaluate': function(scope) {\n            return () => scope.double();\n          }\n        }]\n      }]\n    );\n  },\n\n  'name': 'app'\n};"]}