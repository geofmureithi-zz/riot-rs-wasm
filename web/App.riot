<app>
    <script type="rust" module="counter">
        use serde::{Serialize, Deserialize};
        use serde_json::Value;

        #[derive(Serialize, Deserialize, Default)]
        pub struct CounterState {
            counter: i32
        }

        #[derive(Serialize, Deserialize)]
        pub enum CounterAction {
            increment,
            decrement,
            double,

        }
    
        fn counter_reducer(state: CounterState, action: CounterAction) -> CounterState {
            match action {
                CounterAction::increment => CounterState {
                    counter: state.counter + 1
                },
                CounterAction::decrement => CounterState {
                    counter: state.counter - 1
                },
                CounterAction::double => CounterState {
                    counter: state.counter * 2
                }
            }
        }
    export!(counter_state, counter_dispatch, counter_reducer, CounterState);
    </script>
  <p>{ state.counter }</p>
  <button onclick={increment}>Add +</button>
  <button onclick={decrement}>Subtract -</button>
  <button onclick={double}>Double * 2</button>
</app>