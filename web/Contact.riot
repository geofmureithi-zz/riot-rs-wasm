<app>
<script type="rust" module="contact">
        use serde::{Serialize, Deserialize};

        #[derive(Serialize, Deserialize, Default)]
        pub struct ContactState {
            name: String,
            email: String,
            message: String
        }
        #[allow(non_camel_case_types)]
        #[derive(Serialize, Deserialize)]
        pub enum ContactAction {
            contact,
            set(ContactState)
        }
    
        fn contact_reducer(state: ContactState, action: ContactAction) -> ContactState {
            match action {
                ContactAction::contact => {
                    let message = format!("Hello {}! \n Your Email is: {} \n This method is called from rust!!", &state.name, &state.email);
                    js! {
                        alert( @{message} );
                    };
                    state
                },
                ContactAction::set(state) => {
                    state
                }
            }
        }
    export!(contact_state, contact_dispatch, contact_reducer, ContactState, ContactAction);
</script>

<div class="flex flex-wrap">
    
    <div class="w-full my-6 pr-0 lg:pr-2">
        <div class=" flex bg-gray-100 p-6 justify-center">
            <div class="flex-1 md:text-2xl text-2xl font-bold">Contact Form</div> <span><a href="https://github.com/geofmureithi/riot-rs-wasm/blob/master/web/Contact.riot" alt="View code">View Code On Github</a></span>
        </div>

        <pre class="flex p-8 bg-white font-mono"><code>{ JSON.stringify(state, null, 4) }</code></pre>
        <div class="leading-loose">
            <form class="p-10 bg-white rounded shadow-xl" onsubmit={(e)=> { e.preventDefault(); contact()}}>
                <div class="">
                    <label class="block text-sm text-gray-600" for="name">Name</label>
                    <input onchange={(e) => { state.name = e.target['value'];  set({...state})}} class="w-full px-5 py-1 text-gray-700 bg-gray-200 rounded" id="name" name="name" type="text" required="" placeholder="Your Name" aria-label="Name"/>
                </div>
                <div class="mt-2">
                    <label class="block text-sm text-gray-600" for="email">Email</label>
                    <input onchange={(e) => { state.email = e.target['value'];  set({...state})}}  class="w-full px-5  py-4 text-gray-700 bg-gray-200 rounded" id="email" name="email" type="text" required=""  placeholder="Your Email" aria-label="Email"/>
                </div>
                <div class="mt-2">
                    <label class=" block text-sm text-gray-600" for="message">Message</label>
                    <textarea onchange={(e) => { state.message = e.target['value'];  set({...state})}}  class="w-full px-5 py-2 text-gray-700 bg-gray-200 rounded" id="message" name="message" rows="6" required="" placeholder="Your inquiry.." aria-label="Email"></textarea>
                </div>
                <div class="mt-6">
                    <button class="px-4 py-1 text-white font-light tracking-wider bg-gray-900 rounded" type="submit">Submit</button>
                </div>
            </form>
        </div>
    </div>

</app>